//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// NOTE: auto generated by midc, DON'T edit
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
package api

import (
	"net/http"

	"github.com/mkideal/pkg/netutil/httputil"
)

func (argv *HelpReq) Parse(r *http.Request) error {
	var err error
	argv.Version, err = httputil.ParseString(r, "version")
	if err != nil {
		return err
	}
	argv.Cmd, err = httputil.ParseString(r, "cmd")
	if err != nil {
		return err
	}

	return err
}

func (argv *TokenReq) Parse(r *http.Request) error {
	var err error
	argv.GrantType, err = httputil.ParseString(r, "grant_type")
	if err != nil {
		return err
	}
	argv.Scope, err = httputil.ParseString(r, "scope")
	if err != nil {
		return err
	}
	argv.Code, err = httputil.ParseString(r, "code")
	if err != nil {
		return err
	}
	argv.RedirectURI, err = httputil.ParseString(r, "redirect_uri")
	if err != nil {
		return err
	}
	argv.Username, err = httputil.ParseString(r, "username")
	if err != nil {
		return err
	}
	argv.Password, err = httputil.ParseString(r, "password")
	if err != nil {
		return err
	}
	argv.RefreshToken, err = httputil.ParseString(r, "refresh_token")
	if err != nil {
		return err
	}

	return err
}

func (argv *AuthorizeReq) Parse(r *http.Request) error {
	var err error
	argv.ClientId, err = httputil.ParseString(r, "client_id")
	if err != nil {
		return err
	}
	argv.ResponseType, err = httputil.ParseString(r, "response_type")
	if err != nil {
		return err
	}
	argv.Uid, err = httputil.ParseInt64(r, "uid")
	if err != nil {
		return err
	}
	argv.Scope, err = httputil.ParseString(r, "scope")
	if err != nil {
		return err
	}
	argv.State, err = httputil.ParseString(r, "state")
	if err != nil {
		return err
	}

	return err
}

func (argv *AuthorizeCheckReq) Parse(r *http.Request) error {
	var err error
	argv.ClientId, err = httputil.ParseString(r, "client_id")
	if err != nil {
		return err
	}

	return err
}

func (argv *TokenInfoReq) Parse(r *http.Request) error {
	var err error
	argv.AccessToken, err = httputil.ParseString(r, "access_token")
	if err != nil {
		return err
	}

	return err
}

func (argv *SignupReq) Parse(r *http.Request) error {
	var err error
	argv.AccountType, err = httputil.ParseInt(r, "account_type")
	if err != nil {
		return err
	}
	argv.Account, err = httputil.ParseString(r, "account")
	if err != nil {
		return err
	}
	argv.Password, err = httputil.ParseString(r, "password")
	if err != nil {
		return err
	}
	argv.Nickname, err = httputil.ParseString(r, "nickname")
	if err != nil {
		return err
	}

	return err
}

func (argv *AutoSignupReq) Parse(r *http.Request) error {
	var err error

	return err
}

func (argv *AccountExistReq) Parse(r *http.Request) error {
	var err error
	argv.Username, err = httputil.ParseString(r, "username")
	if err != nil {
		return err
	}

	return err
}

func (argv *SigninReq) Parse(r *http.Request) error {
	var err error
	argv.AccountType, err = httputil.ParseInt(r, "account_type")
	if err != nil {
		return err
	}
	argv.Account, err = httputil.ParseString(r, "account")
	if err != nil {
		return err
	}
	argv.Password, err = httputil.ParseString(r, "password")
	if err != nil {
		return err
	}

	return err
}

func (argv *SignoutReq) Parse(r *http.Request) error {
	var err error
	argv.Uid, err = httputil.ParseInt64(r, "uid")
	if err != nil {
		return err
	}

	return err
}

func (argv *UserReq) Parse(r *http.Request) error {
	var err error
	argv.Uid, err = httputil.ParseInt64(r, "uid")
	if err != nil {
		return err
	}
	argv.Account, err = httputil.ParseString(r, "account")
	if err != nil {
		return err
	}

	return err
}
