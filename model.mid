package model;

// 账号类型
enum AccountType {
    Normal   = 0, // 大小写字母开头,只允许字母,数字和下划线,长度2~20
    Auto     = 1, // 自动生成账号(快捷注册),account 就是下划线加uid
    Telno    = 2, // 手机号
    Email    = 3, // 邮箱
    QQ       = 4, // 从此往下均为第三方账号,所有第三方账号的account前面均加 <type># 前缀
    WeChat   = 5, // 比如 QQ 的加前缀 4#
    Github   = 6, // 微信的加前缀 5#
    Facebook = 7, // 依此类推...
    Twitter  = 8, // 这样做的目的在于确保 account 字段的唯一性
}

// 身份证件类型
enum IdCardType {
    IdCard   = 0, // 身份证
    Passport = 1, // 护照
}

// 性别
enum Gender {
    Secret = 0, // 保密
    Male   = 1, // 男
    Female = 2, // 女
}

// 用户信息
protocol User {
	// 核心信息

	int64 id;                # `key:"true"`              // 随机唯一Id
	AccountType accountType; #                           // 账号类型
	string account;          # `bits:"128" opt:"UNIQUE"` // 账号
	string nickname;         # `bits:"32"`               // 昵称
	string avatar;           # `bits:"256"`              // 头像
	string qrcode;           #                           // 二维码

	// 身份信息

	Gender gender;         #             // 性别
	string birthday;       # `bits:"32"` // 生日
	IdCardType idCardType; #             // 身份证件类型
	string idCard;         # `bits:"64"` // 证件唯一标识

	// 安全信息

	string encryptedPassword; # `bits:"64"` // 加密后密码
	string passwordSalt;      # `bits:"64"` // 加密密码的盐

	// 注册登陆信息

	string createdAt;   # `bits:"32"` // 账号创建时间
	string createdIp;   # `bits:"32"` // 账号创建时IP
	string lastLoginAt; # `bits:"32"` // 最后登陆时间
	string lastLoginIp; # `bits:"32"` // 最后登陆时IP
}

// 访问客户端
protocol Client {
    string id;          # `key:"true" bits:"64"` // oauth 客户端唯一Id
    string secret;      # `bits:"64"`            // 密码
    string name;        # `bits:"64"`            // 应用名称
    string description; #                        // 应用描述
    string logo;        # `bits:"256"`           // Logo 地址
    string scope;       #                        // 授权范围
    string homepageURL; # `bits:"256"`           // 主页地址
    string callbackURL; # `bits:"256"`           // 回调地址
}

// 访问令牌
protocol Token {
    string accessToken;   # `key:"true" bits:"64" opt:"UNIQUE"` // 令牌
    int64 uid;            #                                     // 用户Id
    string createdAt;     # `bits:"32"`                         // 创建时间
    string modifiedAt;    # `bits:"32"`                         // 修改时间
    string expireAt;      # `bits:"32"`                         // 到期时间
    string refreshToken;  # `bits:"64" opt:"UNIQUE"`            // 刷新用令牌
    string resourceOwner; # `bits:"64"`                         // 资源所有者
    string clientId;      # `bits:"64"`                         // 客户Id
    string scope;         #                                     // 可访问权限范围
}

// 认证请求
protocol AuthorizationRequest {
    string authorizationCode; # `key:"true" bits:"64"` // 认证码
    string createdAt;         # `bits:"32"`            // 创建时间
    string redirectURI;       # `bits:"256"`           // 重定向URI
    string responseType;      # `bits:"64"`            // 返回类型
    string state;             # `bits:"128"`           // 自定义状态
    string clientId;          # `bits:"64"`            // 客户端Id
    int64 uid;                #                        // 关联的用户Id
    string grantedScopes;     #                        // 授权范围
    string requestedScopes;   #                        // 请求范围
}

// 手机验证码
protocol TelnoVerifyCode {
    int64 id;         # `key:"true" opt:"AUTO_INCREMENT"` // 递增唯一Id
    string telno;     # `bits:"32"`                       // 手机号码
    string code;      # `bits:"8"`                        // 验证码
    string expiredAt; # `bits:"32"`                       // 到期时间
}

// 邮箱验证码
protocol EmailVerifyCode {
    int64 id;         # `key:"true" opt:"AUTO_INCREMENT"` // 递增唯一Id
    string email;     # `bits:"64"`                       // email 地址
    string code;      # `bits:"64" opt:"UNIQUE"`          // 验证码
    string expiredAt; # `bits:"32"`                       // 到期时间
}

// Web 会话
protocol Session {
    string id;       # `key:"true" bits:"64"` // 唯一Id,用作cookie
    int64 uid;       #                        // 关联的用户Id
    string expireAt; # `bits:"32"`            // 到期时间
}
